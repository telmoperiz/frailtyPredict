% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shared_frailty_pred.R
\name{predict_plot.SharedModel}
\alias{predict_plot.SharedModel}
\title{Plot with terminal event risk predictions}
\usage{
\method{predict_plot}{SharedModel}(
  obj,
  filename,
  t,
  ws,
  individuals,
  CI_method = "MC",
  sig = 0.05,
  MC_B = 100,
  numint_nodes = NULL,
  check_temp = FALSE,
  del_temp = TRUE,
  ...
)
}
\arguments{
\item{obj}{\code{\link[=SharedModel]{SharedModel()}} object with fit results.}

\item{filename}{Name or path where the plot is saved (e.g., \code{"plot.png"}).}

\item{t}{non-negative numeric Prediction point (start of predition interval).}

\item{ws}{vector of positive numeric prediction horizons (the risk of terminal
between \code{t} and \code{t+w} for every element \code{w} in \code{ws} is plotted).}

\item{individuals}{A list of individual information. Each element of the list
must be a named list with the following information:
\itemize{
\item \verb{$covs} = list with covariate values, see \code{\link[=predict.SharedModel]{predict.SharedModel()}}.
\item \verb{$hist} = numeric vector with recurrent event history,
see \code{\link[=predict.SharedModel]{predict.SharedModel()}}. Default is \code{NULL} (no events).
\item \verb{$type} = Whether to predict given recurrent event history or not. Either
\code{"unconditional"} (no, default) or \code{"conditional"} (yes).
\item \verb{$ci} = \code{TRUE} to plot confidence interval for the individual.
Default is \code{FALSE}.
\item \verb{$name} = Label of the individual (to display in the legend). Default is
\code{NA} (automatic naming).
}}

\item{CI_method}{Set to \code{"MC"} for Monte Carlo method (default) or \code{"DM"} for
Delta-method. See \code{\link[=predict.SharedModel]{predict.SharedModel()}}.}

\item{sig}{Significance of the confidence interval. Default is \code{0.05}.
See \code{\link[=predict.SharedModel]{predict.SharedModel()}}.}

\item{MC_B}{Number of Monte Carlo draws. Default is \code{100}.
See \code{\link[=predict.SharedModel]{predict.SharedModel()}}.}

\item{numint_nodes}{Number of numerical integration nodes.
See \code{\link[=predict.SharedModel]{predict.SharedModel()}}.}

\item{check_temp}{\code{TRUE} to check for the existence of the temporary JSON
file with plot data. Default is \code{FALSE}. See details.}

\item{del_temp}{\code{TRUE} (default) to delete the temporary JSON file with plot
data.}

\item{...}{Additional parameters to modify the plot's format.
\itemize{
\item \code{time_label} = text to display in the time axis.
\item \code{rec_label} = text to display in the axis counting recurrent events.
\item \code{pred_label} = text do display in the risk prediction axis.
\item \code{pred_lim} = limits of the risk prediction axis (disables automatic limits).
\item \code{pred_ticksize} = size of risk prediction axis ticks.
\item \code{lgnd_fontsize} = size of legend font.
\item \code{max_lgnd_cols} = columns in legend.
\item \code{sc_marker} = marker of recurrent event times.
\item \code{text_plot} = TRUE to include an explanatory text with the prediction interval.
\item \code{x_major_scale} = major time ticks are multiples of this number.
\item \code{x_minor_scale} = minor time ticks are multiples of this number.
\item \code{ci_alpha} = transparency of the confidence interval region.
}}
}
\value{
Silent. Crates a file with the plot in the specified path.
}
\description{
Creates a plot terminal event risk predictions for a list of individuals.
The ploting engine is python's matplotlib library.
}
\details{
Using this functionality requires installing additional R packages: \link{jsonlite},
\link{reticulate}, and \link{rlist}.

Before running the function, the user must define a path for a python environment
(which must have matplotlib installed). To do so, see \code{\link[reticulate:use_python]{reticulate::use_python()}},
\code{\link[reticulate:use_python]{reticulate::use_virtualenv()}}, and \code{\link[reticulate:py_install]{reticulate::py_install()}}.

A temporary JSON file is created in the directory specified by \code{filename}.
This file contains plot information and is read by the python script. Set
\code{del_temp=TRUE} to delete the file. Set \code{check_temp=TRUE} to search for a
preexisting JSON file with path
\verb{<directory in filename>/temp_<name in filename>.json}.
}
